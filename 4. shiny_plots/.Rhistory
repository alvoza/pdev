# ts_dataOut
ordered = {}
for (i in levels) {
ordered[i] <- ataOut$produccion[dataOut$id_producto == i]
}
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
ordered = {}
for (i in levels) {
ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
}
ordered
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
ordered = {}
for (i in levels) {
ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
}
ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[i,] <- dataOut$produccion[dataOut$id_producto == i]
}
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[i,] <- dataOut$produccion[dataOut$id_producto == levels[i]]
}
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
print(levels[1])
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[i,] <- dataOut$produccion[dataOut$id_producto == levels[i]]
}
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
print(levels[1])
dataOut$produccion[dataOut$id_producto == levels["0020d6cc57219cc1874e0c319ecacbf7"]]
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output[i,] <- dataOut$produccion[dataOut$id_producto == levels[i]]
}
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
print(levels[1])
dataOut$produccion[dataOut$id_producto == levels["0020d6cc57219cc1874e0c319ecacbf7"]]
# iterations = 84
# variables = 16
#
# output <- matrix(ncol=variables, nrow=iterations)
#
# for(i in 1:variables){
#
#  output[i,] <- dataOut$produccion[dataOut$id_producto == levels[i]]
#
# }
#
# output
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
print(levels[1])
dataOut$produccion[dataOut$id_producto ==n"0020d6cc57219cc1874e0c319ecacbf7"]
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
print(levels[1])
dataOut$produccion[dataOut$id_producto == "0020d6cc57219cc1874e0c319ecacbf7"]
# iterations = 84
# variables = 16
#
# output <- matrix(ncol=variables, nrow=iterations)
#
# for(i in 1:variables){
#
#  output[i,] <- dataOut$produccion[dataOut$id_producto == levels[i]]
#
# }
#
# output
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output$i <- dataOut$produccion[dataOut$id_producto == levels[i]]
}
output
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
iterations = 84
variables = 16
output <- matrix(ncol=variables, nrow=iterations)
for(i in 1:variables){
output$i <- "Hola"
}
output
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"]
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
dataOut$produccion[dataOut$id_producto == levels[0]]
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
dataOut$produccion[dataOut$id_producto == levels[1]]
# for (i in levels) {
#  ordered[i] <- dataOut$produccion[dataOut$id_producto == i]
# }
#
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
for (i in levels) {
print(dataOut$produccion[dataOut$id_producto == i])
}
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list", length = desired_length)
for (i in levels) {
empty_list$i <- dataOut$produccion[dataOut$id_producto == i]
}
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list", length = desired_length)
for (i in levels) {
empty_list$i <- dataOut$produccion[dataOut$id_producto == i]
}
empty_list
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list", length = desired_length)
for (i in levels) {
empty_list[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
empty_list
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list", length = desired_length)
for (i in levels) {
empty_list[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list", length = desired_length)
for (i in levels) {
empty_list[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
empty_list
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
desired_length <- 16
empty_list <- vector(mode = "list")
for (i in levels) {
empty_list[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
empty_list
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
dataOut.byProductId
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- dataOut$produccion[dataOut$id_producto == i]
}
for (i in dataOut.byProductId) {
print(i)
}
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
}
ts_dataOut.byProductId <- vector(mode = "list")
# for (i in dataOut.byProductId) {
#   print(i)
# }
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
}
dataOut.byProductId
# for (i in dataOut.byProductId) {
#   print(i)
# }
# ordered["e98c63b52b7dc69e67ce7c8922d6e75e"]
# plot.ts(ts_dataOut)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
}
plot.ts(dataOut.byProductId)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
}
plot.ts(dataOut.byProductId$`0020d6cc57219cc1874e0c319ecacbf7`)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
}
plot.ts(dataOut.byProductId$`0020d6cc57219cc1874e0c319ecacbf7`, dataOut.byProductId$`05da7031fc021630be64efd6f7ece321`)
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
plot.ts(dataOut.byProductId[[i]])
}
# auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
plot.ts(dataOut.byProductId[[i]])
}
auto.arima(ts_dataOut)
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
arima_out <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
plot.ts(dataOut.byProductId[[i]])
arima_out[[i]] <- auto.arima(dataOut.byProductId[[i]])
}
arima_out
# ts_dataOut <-ts(data=dataOut$produccion[dataOut$id_producto == "e98c63b52b7dc69e67ce7c8922d6e75e"], start=c(2018, 7), frequency=12)
# ts_dataOut
##dataOut$produccion[dataOut$id_producto == levels[1]]
dataOut.byProductId <- vector(mode = "list")
arima_out <- vector(mode = "list")
for (i in levels) {
dataOut.byProductId[[i]] <- ts(dataOut$produccion[dataOut$id_producto == i], start=c(2018, 7), frequency=12)
#plot.ts(dataOut.byProductId[[i]])
arima_out[[i]] <- auto.arima(dataOut.byProductId[[i]])
plot(forecast(arima_out[[i]], h=16))
}
shiny::runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp()
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp()
runApp()
reticulate::repl_python()
TableOut = pd.DataFrame({'id': id, 'resultado X':resultsx, 'resultado Y':resultsy})
reticulate::repl_python()
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp()
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp('Documents/MCS/03 DS Algorithms/DSA/Lab01')
runApp()
runApp()
runApp()
runApp()
shiny::runApp('Documents/MCS/04 Product Development/shiny_test')
input$cargar_archivo
runApp('~/Documents/MCS/04 Product Development/ui_dinamico')
runApp()
runApp()
runApp('Documents/MCS/04 Product Development/ui_dinamico')
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
tabsetPanel(tabPanel("Ejemplo1",
numericInput("min", "limite inferior", value = 5),
numericInput("max", "limite superior", value = 10),
sliderInput("slider_eje1", "seleccione intervalo",
min = 0, max = 15, value = 5)
),
tabPanel("Ejemplo2",
sliderInput("s1", "s1", value = 0, min = -5, max = 5),
sliderInput("s1", "s1", value = 0, min = -5, max = 5),
sliderInput("s1", "s1", value = 0, min = -5, max = 5),),
tabPanel("Ejemplo3", "EJEMPLO")
)
))
runApp()
runApp('Documents/MCS/04 Product Development/ui_dinamico')
runApp('Documents/MCS/04 Product Development/tablas_dt')
runApp()
runApp()
runApp('Documents/MCS/04 Product Development/tablas_dt')
diamonds
runApp('Documents/MCS/04 Product Development/shiny_plots')
runApp()
runApp('Documents/MCS/04 Product Development/shiny_plots')
runApp('Documents/MCS/04 Product Development/shiny_parameters')
runApp('Documents/MCS/04 Product Development/shiny_parameters')
?session
runApp('Documents/MCS/04 Product Development/shiny_parameters')
runApp('Documents/MCS/04 Product Development/shiny_parameters')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('Documents/MCS/04 Product Development/shiny_parameters')
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
y    <- brushedPoints(x, input$mouse_brush)
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
faithful
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp()
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp()
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
brushedPoints(faithful[, 2], input$mouse_brush)
x
brushedPoints(faithful[, 2], input$mouse_brush)
input$mouse_brush
x%>%
select(x < input$mouse_brush$xmin)
typeof(x)
x
class(x)
x[x<input$mouse_brush$xmin]
x[x<input$mouse_brush$xmin & x>input$mouse_brush$xmax]
x[x<input$mouse_brush$xmin && x>input$mouse_brush$xmax]
x[x>input$mouse_brush$xmin && x<input$mouse_brush$xmax]
x[x>input$mouse_brush$xmin & x<input$mouse_brush$xmax]
x[x<input$mouse_brush$xmax]
input$mouse_brush$xmax
input$mouse_brush$xmin
x
faithful[, 2]
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
x
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
mouse_brush$xmin
input$mouse_brush$xmin
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
input$mouse_brush$xmin
is.null(input$mouse_brush$xmin)
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
x>input$mouse_brush$xmin & x<input$mouse_brush$xmax
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
my_color
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
x>input$mouse_brush$xmin & x<input$mouse_brush$xmax
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp()
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
input$mouse_brush
nearPoints(faithful[, 2], input$mouse_brush, xvar = "x", yvar = auto)
faithful[,2]
input$mouse_brush
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
cuts
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
x>input$mouse_brush$xmin & x<input$mouse_brush$xmax
x[x>input$mouse_brush$xmin & x<input$mouse_brush$xmax]
runApp('Documents/MCS/04 Product Development/5. shiny_parameters')
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
mtcars
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp()
runApp()
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp('Documents/MCS/04 Product Development/4. shiny_plots')
runApp('Documents/MCS/04 Product Development/pdev/4. shiny_plots')
